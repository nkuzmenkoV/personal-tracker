{"ast":null,"code":"var _jsxFileName = \"/Users/nkuzmenko/zalupa/personal-tracker/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Hardcoded user for admin (you should use a more secure method in production)\nconst adminUser = {\n  username: 'admin',\n  password: '123' // In a real app, this should be hashed\n};\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in from localStorage\n    const user = localStorage.getItem('currentUser');\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n  const login = (username, password) => {\n    // Check if username and password match admin credentials\n    if (username === adminUser.username && password === adminUser.password) {\n      const user = {\n        username\n      };\n      setCurrentUser(user);\n      localStorage.setItem('currentUser', JSON.stringify(user));\n      return true;\n    }\n    return false;\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('currentUser');\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","adminUser","username","password","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","user","localStorage","getItem","JSON","parse","login","setItem","stringify","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/nkuzmenko/zalupa/personal-tracker/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\n// Hardcoded user for admin (you should use a more secure method in production)\nconst adminUser = {\n  username: 'admin',\n  password: '123', // In a real app, this should be hashed\n};\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in from localStorage\n    const user = localStorage.getItem('currentUser');\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n\n  const login = (username, password) => {\n    // Check if username and password match admin credentials\n    if (username === adminUser.username && password === adminUser.password) {\n      const user = { username };\n      setCurrentUser(user);\n      localStorage.setItem('currentUser', JSON.stringify(user));\n      return true;\n    }\n    return false;\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('currentUser');\n  };\n\n  const value = {\n    currentUser,\n    login,\n    logout,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMO,SAAS,GAAG;EAChBC,QAAQ,EAAE,OAAO;EACjBC,QAAQ,EAAE,KAAK,CAAE;AACnB,CAAC;AAED,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CE,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAChD,IAAIF,IAAI,EAAE;MACRH,cAAc,CAACM,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC;IAClC;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAGA,CAACd,QAAQ,EAAEC,QAAQ,KAAK;IACpC;IACA,IAAID,QAAQ,KAAKD,SAAS,CAACC,QAAQ,IAAIC,QAAQ,KAAKF,SAAS,CAACE,QAAQ,EAAE;MACtE,MAAMQ,IAAI,GAAG;QAAET;MAAS,CAAC;MACzBM,cAAc,CAACG,IAAI,CAAC;MACpBC,YAAY,CAACK,OAAO,CAAC,aAAa,EAAEH,IAAI,CAACI,SAAS,CAACP,IAAI,CAAC,CAAC;MACzD,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAMQ,MAAM,GAAGA,CAAA,KAAM;IACnBX,cAAc,CAAC,IAAI,CAAC;IACpBI,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC;EACxC,CAAC;EAED,MAAMC,KAAK,GAAG;IACZd,WAAW;IACXS,KAAK;IACLG,MAAM;IACNV;EACF,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAhB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B;AAACpB,EAAA,CAzCeF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AA2C5B,OAAO,SAASwB,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,OAAOjC,UAAU,CAACI,WAAW,CAAC;AAChC;AAAC6B,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}